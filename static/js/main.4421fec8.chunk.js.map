{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAceA,EAbH,SAACC,GAAS,IACbC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,GACnB,OAEC,sBAAKC,UAAU,gDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,mCAAMF,EAAN,OACA,4BAAIC,WCYOK,EAnBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAChB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACnB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGIC,EAVE,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC9B,OACC,uBACCV,UAAU,mBACVW,KAAM,SACNC,YAAY,gBACZC,SAAUH,KCCEI,EAPD,SAAClB,GACd,OACC,qBAAKmB,MAAQ,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAlE,SACGtB,EAAMuB,YCuCIC,E,kDApCd,aAAc,IAAD,8BACZ,gBAYDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAZxC,EAAKC,MAAO,CACXtB,OAAO,GACPK,YAAa,IAJF,E,gEAOO,IAAD,OAClBkB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACnB,OAAO2B,S,+BAS5B,IAAD,OACFC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAAC,GAC/C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKX,MAAMjB,YAAY2B,kBAEjE,OACC,sBAAKpC,UAAY,KAAjB,UACC,6CACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ4B,a,GA7BLM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACC,cAAC,EAAD,QAGHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4421fec8.chunk.js","sourcesContent":["import React from 'react';\nconst Card =(props)=>{\n\tconst { name,email,id} = props;\n\treturn(\n\n\t\t<div className='tc bg-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?100x100`}/>\n\t\t\t<div>\n\t\t\t\t<h2> {name} </h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\nconst Cardlist=({robots})=>{\n\treturn(\n\t\t<div>\n\t\t\t{\n\t\t    robots.map((user,i) =>{\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t}\n    \t </div>\n\t );\n\n}\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox =({searchfield,searchChange}) => {\n\treturn (\n\t\t<input \n\t\t\tclassName='pa2 ba b--greeen'\n\t\t\ttype ='search' \n\t\t\tplaceholder='search robots' \n\t\t\tonChange={searchChange}\n\t\t/>\n\t);\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll =(props)=>{\n\treturn(\n\t\t<div style={ {overflowY:'scroll',border:'3px solid black', height:'700px'}}>\n\t \t\t{props.children}\n\t \t</div>\n\t );\n};\nexport default Scroll;","import React, {Component} from 'react';\nimport Cardlist from '../components/Cardlist';\n\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\n\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state= {\n\t\t\trobots:[],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=> response.json())\n\t\t\t.then(users=> this.setState({robots:users}));\n\t}\n\n\tonSearchChange=(event)=>{\n\t\tthis.setState({searchfield:event.target.value})\n\t\t\n\t}\n\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t})\n\t\treturn (\n\t\t\t<div className = 'tc'>\n\t\t\t\t<h1>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<Cardlist robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t\t<div >\n  \t\t\t<App/> \n  \t\t</div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n  "],"sourceRoot":""}